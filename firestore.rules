rules_version = '2';
service cloud.firestore {
 match /databases/{database}/documents {
   function isAuth() {
     return request.auth != null;
   }

   function isOwner(userId) {
     return isAuth() && request.auth.uid == userId;
   }

   // User profiles
   match /users/{userId} {
     allow get: if isAuth();
     allow create, update, delete: if isOwner(userId);

     // User collections
     match /watchlist/{movieId} {
       allow read: if isAuth();
       allow write: if isOwner(userId);
     }
     
     match /likes/{movieId} {
       allow read: if isAuth(); 
       allow write: if isOwner(userId);
     }
     
     match /recentlyViewed/{movieId} {
       allow read: if isAuth();
       allow write: if isOwner(userId);
     }
   }

   // Chat messages
   match /chats/{chatId} {
     allow read: if isAuth() && resource.data.userId == request.auth.uid;
     allow create: if isAuth() && request.resource.data.userId == request.auth.uid;
     allow update, delete: if isAuth() && resource.data.userId == request.auth.uid;
     
     // Chat message metadata
     match /metadata/{docId} {
       allow read: if isAuth() && get(/databases/$(database)/documents/chats/$(chatId)).data.userId == request.auth.uid;
       allow write: if false; // Only writeable by server
     }
   }

   // Public data
   match /genres/{genreId} {
     allow read: if isAuth();
     allow write: if false;
   }
 }
}